//Lumberjacking system by Soulless 
//3:41 PM 1/4/2022
//v1.0

//hitting trees 930-940
//tree falling 1142 or 848

[defname gathering_lumberjacking_settings]		
gathering_lumberjacking_settings		t_tree,t_foliage,0,0,4,1,1*60*60		//type,tiledata 1-3, timelength, damagetool, node clear time
gathering_lumberjacking_resource0		i_log_ironwood,120.0,150.0,3,7,1.0
gathering_lumberjacking_resource1		i_log_hawthorn,115.0,150.0,3,7,1.1
gathering_lumberjacking_resource2		i_log_blackwood,110.0,150.0,3,7,1.2
gathering_lumberjacking_resource3		i_log_yew,105.0,150.0,3,7,1.3
gathering_lumberjacking_resource4		i_log_maple,100.0,150.0,3,7,1.4
gathering_lumberjacking_resource5		i_log_oak,95.0,150.0,3,7,1.6
gathering_lumberjacking_resource6		i_log_rosewood,90.0,150.0,3,7,2.3
gathering_lumberjacking_resource7		i_log_cypress,85.0,150.0,4,8,2.8
gathering_lumberjacking_resource8		i_log_walnut,80.0,150.0,5,9,4.2
gathering_lumberjacking_resource9		i_log_cedar,75.0,150.0,6,10,7.0
gathering_lumberjacking_resource10		i_log_ash,70.0,150.0,7,11,9.8
gathering_lumberjacking_resource11		i_log_hickory,65.0,150.0,8,12,11.2
gathering_lumberjacking_resource12		i_log,0.0,150.0,9,13,80.0			//itemdef,minskill,maxskill,amountlo,amounthi,chance


[SKILL 44]
DEFNAME=SKILL_LUMBERJACK
KEY=Lumberjacking
TITLE=Lumberjack
FLAGS=skf_gather|skf_scripted
PROMPT_MSG=
DELAY=2.0
STAT_STR=125
STAT_INT=30
STAT_DEX=45
BONUS_STR=100
BONUS_DEX=10
BONUS_INT=0
BONUS_STATS=20
ADV_RATE=1.0,1.0,1.0    //2.5,50.0,200.0
VALUES=1,10,50
RANGE=2

on=@start
//act = node	//this is now automatically created and referenced by sphere
//actprv = gathering tool 

//serv.log <src.name>(<src>) started lumberjacking in <src.region.name> (<p>)
src.actp=<src.targp>
if !(<act.isvalid>) 
  return 1
elseif (<src.findlayer.25>)
  src.sysmessage You can't chop while riding.
  return 1
elseif (<src.distance <src.actp>> >= 3)
  src.sysmessage That is too far away.
  return 1
elseif !(<weapon>) || (!(<weapon.isaxe>) && (<weapon.baseid> != i_dagger))
  src.sysmessage An Axe must be equipped for any serious chopping.
  return 1
elseif !(<src.f_can_chop <src.actp>>)	
  src.sysmessage You cannot chop here.
  return 1
endif

src.flags &= ~ statf_hidden
src.flags &= ~ statf_invisible

if !(<act.more2>)
  act.f_lumberjacking_format_node
endif
			
if !(<act.isvalid>) || (<act.amount> <= 0) || (<act.more2> == 00)	//this shouldnt fire off before the skill finished
  src.sysmessage There's not enough wood here to harvest.
  return 1
endif

ref2=<src.actprv>	//<src.ctag0.gathering_tool>
src.ctag.gathering_tool=
if (<ref2.isvalid>) && (<ref2.isaxe>) 
  if !(<ref2.usescur>)
    ref2.usesmax={50 60}
    ref2.usescur=<ref2.usesmax>
  endif
  if (<R1,100> <= 3)
    ref2.usescur -= 1 
    src.sysmessage Your <ref2.name> has been damaged.
    if (<ref2.usescur> <= 0)
      src.sysmessage your <ref2.name> has been destroyed.
      ref2.consume
    endif
  endif
endif


//src.anim 13	//apparently not needed
//src.sound {930-940}
src.sendpacket 0c0 00 D0 D0 W01B1F W<src.targp.x> W<src.targp.y> B<eval(<src.targp.z>+20)> W<src.targp.x> W<src.targp.y> B<src.targp.z> B0 B25 00 00 00 B0 D0 D0
if !(<f_skillsucceed lumberjacking>) || (<act.amount> <= 0) || (<src.lumberjacking> < <act.morex>)
  actdiff=65535
else
  actdiff=0
endif
return 0

ON=@Fail
src.sysmessage You hack at the tree for a while, but fail to produce any useable wood.

ON=@Abort
src.sysmessage You decide not to chop wood for now.

on=@success
ref1=<act>
ref2=<actprv>
if !(<ref1.isvalid>) || (<ref1.amount> <= 0) || (<ref1.more2> == 00)
  src.sysmessage There's not enough wood here to harvest.
elseif (<src.findlayer.21.weight> > <eval (<src.maxweight>+400)>) && !(<src.isgm>)
  src.sysmessage You can't place any wood into your backpack!
elseif !(<ref2.isaxe>)
  ref1.amount -= 1
  serv.newitem i_kindling
  new.cont=<src.findlayer.21>
  src.sysmessage You put some kindling in your backpack.
else
  local.reap=<R1,4>
  local.reap=<qval (<ref1.amount> < <local.reap>)? <ref1.amount> : <local.reap>>		//make sure we can only get as much as is left
  ref1.amount -= <local.reap>
  ref1.update
  serv.newitem <ref1.more2>,<local.reap>
  new.cont=<src.findlayer.21>
  new.update
  src.sysmessage You put some <new.name> into your backpack.
endif

///////////////////////////////////
// Lumberjacking System

[function f_can_chop]
local.p=<argv[0]>,<argv[1]>,<src.p.m>
ref1=<serv.map(<local.p>).region.uid>	//get the multi(ship) if they are in one
args=<def0.gathering_lumberjacking_settings>
for 0 3		//4 different possible args for terrain type
  if !(<ref1.isvalid>) && (<argv[<dlocal._for>]>) && (<serv.map(<local.p>).isneartype <argv[<dlocal._for>]>>)
    return 1
  endif
endfor
return 0

[function f_lumberjacking_find_node]	//used to find if there is a node
serv.newitem i_memory
new.p=<args>
ref1=<new.f_lumberjacking_get_node_uid <args>>
new.remove
return <ref1>

[function f_lumberjacking_get_node_uid]
ref1=<uid>
foritems 0
  if (<baseid>==i_worldgem_bit) && (<type>==t_tree) && (<uid> != <ref1>)
    //serv.b found a node
    return <uid>
  endif
endfor
return 0

[function f_lumberjacking_format_node]
args=<def0.gathering_lumberjacking_settings>
timer=<argv[6]>
args=<f_lumberjacking_get_resource>
morex=<argv[1]>		//min skill req
morey=<argv[2]>		//max skill req
more2=<argv[0]>		//resource
amount=<R<argv[3]>,<argv[4]>>	//amount  
events=+t_lumberjacking_node

[function f_lumberjacking_get_resource]
while !(<isempty <def.gathering_lumberjacking_resource<dlocal.n>>>)		//select the lumberjacking resource
  args=<def0.gathering_lumberjacking_resource<dlocal.n>>
  local.chance=<R1,1000>
  if (<src.lumberjacking> >= <argv[1]>) && (<local.chance> <= <argv[5]>) 	//if you have the skill and by chance it's there
    return <args>	//bail out, we got our log selected
  endif
  local.n += 1
endwhile
return <args>	//we're finished looking, just return this

[typedef t_lumberjacking_node]

on=@click
message @030 lumberjacking Node: <qval (<more2> != 00)?<amount> <serv.itemdef.<more2>.name>:Nothing> 
return 1

on=@timer
remove
return 1

[ITEMDEF 0318f]	//0318f
DEFNAME=i_bark
//ID=i_kindling
NAME=bark fragment%s
TYPE=t_normal
VALUE=12
WEIGHT=0.1
CATEGORY=Resources
SUBSECTION=Plant
DESCRIPTION=Bark Fragment

on=@create
//color=015f

[typedef t_weapon_sword]

on=@targon_ground
if (<src.action>==lumberjacking)
  src.sysmessage You are already chopping.
  return 1
endif
//src.ctag.gathering_tool=<uid>
src.actprv=<uid>

on=@targon_item
if (<src.targ.type>==t_tree) && (<src.action>==lumberjacking)
  src.sysmessage You are already chopping.
  return 1
endif
//src.ctag.gathering_tool=<uid>
src.actprv=<uid>




[EOF]